package com.deloitte.expense.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.deloitte.expense.dao.EmployeeDao;
import com.deloitte.expense.model.Employee;
//import com.deloitte.employee.model.Expense;
import com.deloitte.expense.service.ExpenseService;

@Controller
public class MasterController {

	@Autowired
	ExpenseService employeeService;
	
	@Autowired
	EmployeeDao employeeDao;
	
	@RequestMapping("/")
	public ModelAndView home() {
		ModelAndView mav = new ModelAndView("home");
		mav.addObject("message", "List of Employees");
		List<Employee> employees = employeeService.findAll();
		System.out.println(employees);
		mav.addObject("employees", employees);
		return mav;
	}
	
	@RequestMapping("/employee")
	public ModelAndView addExpense() {
		ModelAndView mav = new ModelAndView("employee");
		mav.addObject("employee", new Employee());
		return mav;
	}
	
	@RequestMapping(value = "/employee", method = RequestMethod.POST)
	public String save(@ModelAttribute("employee")Employee employee) {
		employeeService.save(employee);
		return "redirect:/";
	}
	
	@RequestMapping(value = "/employee/{id}")
	public ModelAndView edit(@PathVariable("id")Integer id) {
		ModelAndView mav = new ModelAndView("employee");
		Employee employee = employeeService.findById(id);
		mav.addObject("employee", employee);
		return mav;
	}
	
	@RequestMapping(value = "/{id}")
	public String delete(@PathVariable("id") Integer id) {
		employeeService.delete(id);
		return "redirect:/";
	}
	
	@RequestMapping("/search")
	public ModelAndView search(@Param("id") Integer id, @Param("name") String name) {
		ModelAndView mav = new ModelAndView("home");
		List<Employee> employees;
		if(id!=null) {
			employees = employeeDao.search(id);
		}
		else {
			employees= employeeDao.search(name);
		}
		mav.addObject("employees", employees);
		System.out.println(employees);
		return mav;
	}
	
	
	
}
